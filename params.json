{"name":"Formie","tagline":"vanillajs ajax forms, with multipart encoding support","body":"# formie  [![NPM version](https://badge.fury.io/js/formie.svg)](http://badge.fury.io/js/formie)\r\n\r\n\r\n** CommonJS/Browserified ajax form submission **\r\n\r\nFormie submits form data via AJAX. Formie supports JSONP, GET, POST, DELETE and multipart/form-data file Uploads without the baggage of a full framework. \r\n\r\n[API Documenation](https://yawetse.github.io/formie/api/html/index.html)\r\n\r\n## Example\r\n\r\nCheck out `example/index.html`, the example javascript for the example page is `resources/js/example_src.js`\r\n\r\n## Installation\r\n\r\n```\r\n$ npm install formie\r\n```\r\n\r\nFormie is a browserified/commonjs javascript module.\r\n\r\n## Usage\r\n\r\n*JavaScript*\r\n```javascript\r\nvar Formie = require('formie'),\r\n\tmyFormie;\r\n\r\n//initialize nav component after the dom has loaded\r\nwindow.addEventListener('load',function(){\r\n\tmyFormie = new Formie({\r\n    ajaxformselector: '#formie',\r\n    headers: {'customheader':'customvalue'},\r\n    beforesubmitcallback: function(event,formelement){console.log(event,formelement)},\r\n    successcallback: function(response){console.log(response)},\r\n    errorcallback: function(error,response){console.log(error,response)}\r\n  });\r\n\t//expose your nav component to the window global namespace\r\n\twindow.myFormie = myFormie;\r\n});\r\n```\r\n\r\n*HTML*\r\n```html\r\n<html>\r\n\t<head>\r\n  \t<title>Your Page</title>\r\n  \t<script src='[path/to/browserify/bundle].js'></script>\r\n\t</head>\r\n\t<body>\r\n\t\t<form method=\"get\" action=\"\" id=\"formie\">\r\n\t    <section>\r\n\t      <label for=\"field1\">Field 1</label>\r\n\t      <input type=\"text\" value=\"\" name=\"field1\" id=\"field1\" />\r\n\t    </section>\r\n\t    <section>\r\n\t      <label for=\"field2\">Field 2</label>\r\n\t      <input type=\"text\" value=\"\" name=\"field2\" id=\"field2\" />\r\n\t    </section>\r\n\t    <section>\r\n\t      <input type=\"submit\" value=\"ajax submit\" name=\"submitbutton\" />\r\n\t    </section>\r\n\t\t</form>\r\n\t</body>\r\n</html>\r\n```\r\n\r\n##OPTIONS\r\n```javascript\r\ndefaultOptions = {\r\n\tajaxsubmitfileuploadclassname: 'formie-file', //file input class to readAsDataURL\r\n\tajaxformselector: '#formie', //formie form selector\r\n\tajaxsubmitform: null,\r\n\tjsonp: false, //retrieves data via JSONP, form data must contain a 'callback' parameter\r\n\tautosubmitselectors: '.autoFormSubmit',\r\n\tautosubmitelements: [],\r\n\tpreventsubmitselectors: '.noFormSubmit',\r\n\tpreventsubmitelements: [],\r\n\theaders: {}, // custom headers to submit\r\n\tqueryparameters: {}, // programmitcally add more get data\r\n\tpostdata: {}, // programmitcally add more post data\r\n\tbeforesubmitcallback: null, // callback(event,formelement)  \r\n\terrorcallback: null, // callback(error,response)\r\n\tsuccesscallback: null // callback(response)\r\n};\r\n```\r\n\r\n##API\r\n\r\n```javascript\r\n//submit formie via ajax\r\nmyFormie.submit(); \r\n\r\n//events\r\nmyFormie.on('autosubmitelement',callback); // callback(formelement)\r\nmyFormie.on('prevententer',callback); // callback(eventTarget)\r\nmyFormie.on('initialized',callback); // callback()\r\nmyFormie.on('submitted',callback); // callback(formieData)\r\n```\r\n##Development\r\n*Make sure you have grunt installed*\r\n```\r\n$ npm install -g grunt-cli\r\n```\r\n\r\nThen run grunt watch\r\n```\r\n$ grunt watch #uses grunt-connect on port 8181 \r\n```\r\n##For generating documentation\r\n```\r\n$ grunt doc\r\n$ jsdoc2md lib/**/*.js index.js > doc/api.md\r\n```\r\n\r\n##Notes\r\n* The Formie uses Node's event Emitter for event handling.\r\n* In order to test post submission, grunt connect is used on port 8181","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}